@inproceedings{10.1145/3315568.3329966,
author = {Dann, Andreas and Hermann, Ben and Bodden, Eric},
title = {SootDiff: Bytecode Comparison across Different Java Compilers},
year = {2019},
isbn = {9781450367202},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3315568.3329966},
doi = {10.1145/3315568.3329966},
abstract = {Different Java compilers and compiler versions, e.g., javac or ecj, produce different bytecode from the same source code. This makes it hard to trace if the bytecode of an open-source library really matches the provided source code. Moreover, it prevents one from detecting which open-source libraries have been re-compiled and rebundled into a single jar, which is a common way to distribute an application. Such rebundling is problematic because it prevents one to check if the jar file contains open-source libraries with known vulnerabilities. To cope with these problems, we propose the tool SootDiff that uses Soot's intermediate representation Jimple, in combination with code clone detection techniques, to reduce dissimilarities introduced by different compilers, and to identify clones. Our results show that SootDiff successfully identifies clones in 102 of 144 cases, whereas bytecode comparison succeeds in 58 cases only.},
booktitle = {Proceedings of the 8th ACM SIGPLAN International Workshop on State Of the Art in Program Analysis},
pages = {14–19},
numpages = {6},
keywords = {Intermediate Representation, Code Clone Detection, Static Analysis},
location = {Phoenix, AZ, USA},
series = {SOAP 2019}
}


@ARTICLE{8778721,  author={Dann, Andreas and Hermann, Ben and Bodden, Eric},  journal={IEEE Transactions on Software Engineering},   title={ModGuard : Identifying Integrity  amp; Confidentiality Violations in Java Modules},   year={2021},  volume={47},  number={8},  pages={1656-1667},  doi={10.1109/TSE.2019.2931331}}


@ARTICLE{9506931,  author={Dann, Andreas and Plate, Henrik and Hermann, Ben and Ponta, Serena Elisa and Bodden, Eric},  journal={IEEE Transactions on Software Engineering},   title={Identifying Challenges for OSS Vulnerability Scanners - A Study  amp; Test Suite},   year={2021},  volume={},  number={},  pages={1-1},  doi={10.1109/TSE.2021.3101739}}


@inproceedings{10.1145/2631675.2631682,
author = {Pohlmann, Uwe and Meyer, Matthias and Dann, Andreas and Brink, Christopher},
title = {Viewpoints and Views in Hardware Platform Modeling for Safe Deployment},
year = {2014},
isbn = {9781450329002},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2631675.2631682},
doi = {10.1145/2631675.2631682},
abstract = {Future cyber-physical systems will behave smart, i.e., they will provide self-* properties and collaborate with each other. Software realizes this smart behavior. In modern cars, a hardware platform consists of up to 100 networked electronic control units (ECUs) that execute the software. As the amount of safety-critical software increases, the task of describing a suitable hardware platform for deploying safety-critical software components to ECUs becomes more complicated. Existing approaches for the definition of a hardware platform do not address the different stakeholder's concerns and do not provide a systematic method. This leads to an error-prone development. In this paper, we identify viewpoints for the stakeholder's concerns and provide a method for the multi-view modeling of hardware platforms. In addition, we support hierarchical and variable horizontal composition of hardware platforms by transferring concepts from component-based software engineering. To test our method, we use an Arduino-based cooperative adaptive cruise control system.},
booktitle = {Proceedings of the 2nd Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling},
pages = {23–30},
numpages = {8},
keywords = {Cyber-physical systems, Deployment, hardware platform description},
location = {York, United Kingdom},
series = {VAO '14}
}


@techreport{hniid=8015,
author = {Dann, Andreas Peter and Pohlmann, Uwe},
title = {The MechatronicUML Hardware Platform Description Method – Process and Language},
number = {tr-ri-14-336},
institution = {Heinz Nixdorf Institute, University of Paderborn},
month = feb,
year = {2014},
note = {v. 0.1},
}


% missing editor

@inproceedings{mci/2014,
author = {Dann, Andreas},
title = {Modellierung von Hardwareplattformen für die modellgetriebene Softwareentwicklung},
booktitle = {Informatiktage 2014 - Big (Data) is beautiful},
year = {2014},
editor = {},
publisher = {Gesellschaft für Informatik},
address = {Bonn}
}


% missing editor

@inproceedings{mci/2021,
author = {Dann, Andreas and Hermann, Ben and Bodden, Eric},
title = {Presentation - ModGuard: Identifying Integrity &
Confidentiality Violations in Java Modules},
booktitle = {Software Engineering 2021},
year = {2021},
editor = {},
publisher = {Gesellschaft für Informatik e.V.},
address = {Bonn}
}


% Missing ICSE Journal first 
% https://conf.researchr.org/track/icse-2020/icse-2020-Journal-First?#event-overview
